'''
Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.



'''

class Solution(object):

    def longestConsecutive(self, num):
        numbers = set(num)
        max_len = 0
        while numbers:
            m = n = numbers.pop()
            length = 1
            while m-1 in numbers:
                numbers.remove(m-1)
                m -= 1
                length += 1
            while n+1 in numbers:
                numbers.remove(n+1)
                n += 1
                length += 1
            max_len = max(max_len, length)
        return max_len
    
    
    def longestConsecutive_still_slow(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        m = {}
        res = 0
        for x in (nums):
            if not x in m.keys():
                right = m[x+1] if (x+1 in m.keys()) else 0
                left = m[x-1] if (x-1 in m.keys()) else 0
                sum = right+left+1
                m[x] = sum
                m[x-left] = sum
                m[x+right] = sum
                res = max(res, sum)

        return res
