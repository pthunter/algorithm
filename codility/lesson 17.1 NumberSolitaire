# you can write to stdout for debugging purposes, e.g.
# print "this is a debug message"

import sys

def solution(A):
    # write your code in Python 2.7
    '''
    if(len(A)==0):
        return 0
    if(len(A)==1):
        return A[0]
    res = [None]*len(A)
    return setMax(res,0,A)
    
class Solution {
    public int solution(int[] A) {
        int[] store = new int[A.length];
        store[0] = A[0];
        for (int i = 1; i < A.length; i++) {
            
            ########## get max store [i-1] to [i-6], asign to [i]
            store[i] = store[i-1];                                        #
            for (int minus = 2; minus <= 6; minus++) {                    #
                if (i >= minus) {                                         #
                    store[i] = Math.max(store[i], store[i - minus]);
                } else {
                    break;
                }
            }
            
            ##################### [i] + A[i]
            store[i] += A[i];
        }
        return store[A.length - 1];
    }
}
    A:     -1, -2, -3, -2, -5, -1, -3, -4, -1
    store: -1
      i=1: -1, -3        (-1) + (-2)
      i=2: -1, -3, -4    max(-3, -1)+(-3)
      i=3: -1, -3, -4, -3  
      
      
    '''
    store = [0]*len(A)
    store[0] = A[0]
    for i in range(1, len(A)):
        store[i] = store[i-1]    
        for minus in range(2,7):
            if(i>=minus):
                store[i] = max(store[i], store[i-minus])
            else:
                break
        store[i] += A[i]
    return store[len(A)-1]
            
    
############ SLOW
def setMax(res,id,A):
    if(id==len(A)-1):
        res[id] = A[len(A)-1]
        return res[id]
        
    if(not res[id] is None):
        return res[id]
    else:
        for x in range(6):
            if id+x+1<len(A) and A[id+x+1]>0:
                res[id] = A[id] + setMax(res,id+x+1,A)
                return res[id]
        if(id>=len(A)-1-6):
            res[id] = A[id] + A[len(A)-1]
            return res[id]
        mm = -sys.maxint-1
        for x in range(6):
            if id+x+1<len(A):
                mm = max(mm, setMax(res,id+x+1,A))
                # mm = max(mm, A[id+x+1] + max(setMax(res, id+7+i, A) for i in range(x+1) ) )
        res[id] = A[id] + mm
        return res[id]
